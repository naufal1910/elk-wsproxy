version: "3.9"

networks:
  wsproxy-net:

volumes:
  logstash-data:

services:
  # OPTIONAL: pakai kalau belum punya ES/Kibana
  es-wsproxy:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.0
    container_name: es-wsproxy
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false           # untuk dev termudah; jika true, isi user/pass di output Logstash
      - ES_JAVA_OPTS=-Xms1g -Xmx1g

    ports: ["9200:9200"]
    networks: [wsproxy-net]

  kibana-wsproxy:
    image: docker.elastic.co/kibana/kibana:8.14.0
    container_name: kibana-wsproxy
    depends_on: [es-wsproxy]
    environment:
      - ELASTICSEARCH_HOSTS=http://es-wsproxy:9200
    ports: ["5601:5601"]
    networks: [wsproxy-net]

  logstash-wsproxy:
    image: docker.elastic.co/logstash/logstash:8.14.0
    container_name: logstash-wsproxy
    depends_on: [es-wsproxy]
    environment:
      - LS_JAVA_OPTS=-Xms512m -Xmx512m
      - XPACK_MONITORING_ENABLED=false
    volumes:
      # mount multi-pipeline
      - ./logstash/pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro
      - ./logstash/pipeline/:/usr/share/logstash/pipeline:ro
      # mount logs Windows (pakai tanda kutip biar aman di Windows path)
      - "D:/opt/apache-tomcat-9.0.80_proxy/wsproxy_logs:/logs:ro"
      - "D:/opt/apache-tomcat-9.0.80_proxy/logs:/tomcat-logs:ro"
      # simpan state sincedb, queue dll
      - logstash-data:/usr/share/logstash/data
    networks: [wsproxy-net]
